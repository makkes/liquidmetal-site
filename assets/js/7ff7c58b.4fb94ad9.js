"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8477],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(n),m=i,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9645:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const l={sidebar_position:3},o="Install and start Flintlockd",a={unversionedId:"tutorial-basics/flintlockd",id:"tutorial-basics/flintlockd",title:"Install and start Flintlockd",description:"Here we will provision your machine to act as a host for MicroVMs.",source:"@site/docs/tutorial-basics/flintlockd.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/flintlockd",permalink:"/site/docs/tutorial-basics/flintlockd",draft:!1,editUrl:"https://github.com/weaveworks-liquidmetal/docs/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/flintlockd.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Install and start containerd",permalink:"/site/docs/tutorial-basics/containerd"},next:{title:"Provision a CAPI management cluster",permalink:"/site/docs/tutorial-basics/capi"}},c={},s=[{value:"Firecracker",id:"firecracker",level:2},{value:"Flintlock",id:"flintlock",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"install-and-start-flintlockd"},"Install and start Flintlockd"),(0,i.kt)("p",null,"Here we will provision your machine to act as a host for MicroVMs."),(0,i.kt)("h2",{id:"firecracker"},"Firecracker"),(0,i.kt)("p",null,"Flintlock is a wrapper around ",(0,i.kt)("a",{parentName:"p",href:"https://firecracker-microvm.github.io/"},"Firecracker")," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.cloudhypervisor.org/"},"Cloud Hypervisor"),".\nIn this exercise we are going to use Firecracker. We can install that with the same\nprovisioning script as in the last section."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./provision.sh firecracker\n")),(0,i.kt)("p",null,"Output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[flintlock provision.sh] Installing firecracker version latest to /usr/local/bin\n[flintlock provision.sh] Firecracker version v1.0.0-macvtap successfully installed\n")),(0,i.kt)("p",null,"Verify the installation with ",(0,i.kt)("inlineCode",{parentName:"p"},"which firecracker"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/local/bin/firecracker\n")),(0,i.kt)("h2",{id:"flintlock"},"Flintlock"),(0,i.kt)("p",null,"We can install and start the service with the same script:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./provision.sh flintlock --dev --insecure\n")),(0,i.kt)("p",null,"This command will:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install the latest version of ",(0,i.kt)("inlineCode",{parentName:"li"},"flintlockd")),(0,i.kt)("li",{parentName:"ul"},"Create various state dirs"),(0,i.kt)("li",{parentName:"ul"},"Save a development config file under ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/opt/flintlockd/config.yaml")),(0,i.kt)("li",{parentName:"ul"},"Start ",(0,i.kt)("inlineCode",{parentName:"li"},"flintlockd")," as a ",(0,i.kt)("inlineCode",{parentName:"li"},"systemd")," service")),(0,i.kt)("p",null,"Output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\n[flintlock provision.sh] Creating containerd directory /var/lib/containerd-dev/snapshotter/devmapper\n[flintlock provision.sh] Creating containerd directory /run/containerd-dev\n[flintlock provision.sh] Creating containerd directory /etc/containerd\n[flintlock provision.sh] All containerd directories created\n[flintlock provision.sh] Installing flintlockd version latest to /usr/local/bin\n[flintlock provision.sh] Flintlockd version v0.3.0 successfully installed\n[flintlock provision.sh] Writing flintlockd config to /etc/opt/flintlockd/config.yaml.\n[flintlock provision.sh] Flintlockd config saved\n[flintlock provision.sh] Starting flintlockd service\n[flintlock provision.sh] Flintlockd running at localhost:9090\n")),(0,i.kt)("p",null,"Verify that the service started with ",(0,i.kt)("inlineCode",{parentName:"p"},"systemctl status flintlockd"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'\u25cf flintlockd.service - flintlock microvm service\n     Loaded: loaded (/etc/systemd/system/flintlockd.service; enabled; vendor preset: enabled)\n     Active: active (running) since Fri 2022-09-23 15:52:20 BST; 3s ago\n       Docs: https://docs.flintlock.dev/\n    Process: 54311 ExecStartPre=which firecracker (code=exited, status=0/SUCCESS)\n    Process: 54312 ExecStartPre=which flintlockd (code=exited, status=0/SUCCESS)\n   Main PID: 54313 (flintlockd)\n      Tasks: 11 (limit: 18694)\n     Memory: 10.6M\n        CPU: 93ms\n     CGroup: /system.slice/flintlockd.service\n             \u2514\u250054313 /usr/local/bin/flintlockd run\n\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=info msg="starting microvm controller"\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=info msg="starting microvm controller with 1 workers" controller=microvm\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=info msg="resyncing microvm specs" controller=microvm\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=info msg="Resyncing specs" action=resync controller=microvm namespace=ns\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=debug msg="Getting all specs" action=resync controller=microvm namespace=ns\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=warning msg="basic authentication is DISABLED"\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=warning msg="TLS is DISABLED"\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=debug msg="starting grpc server listening on endpoint localhost:9090"\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=info msg="starting event listener" controller=microvm\nSep 23 15:52:20 callisto-XPS flintlockd[54313]: time="2022-09-23T15:52:20+01:00" level=info msg="Starting workersnum_workers1" controller=microvm\n...\n')))}d.isMDXComponent=!0}}]);