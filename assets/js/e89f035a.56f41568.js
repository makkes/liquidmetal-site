"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1028],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={title:"Service Authentication"},l="Service Authentication",o={unversionedId:"guides/authn",id:"guides/authn",title:"Service Authentication",description:"Secure Liquid Metal platform communications with mTLS and Basic Auth.",source:"@site/docs/guides/authn.md",sourceDirName:"guides",slug:"/guides/authn",permalink:"/site/docs/guides/authn",draft:!1,editUrl:"https://github.com/weaveworks-liquidmetal/site/tree/main/docs/guides/authn.md",tags:[],version:"current",frontMatter:{title:"Service Authentication"},sidebar:"docs",previous:{title:"Cluster API Provider MicroVM",permalink:"/site/docs/guides/capmvm"},next:{title:"Architecture",permalink:"/site/docs/category/architecture"}},c={},s=[{value:"Basic Auth",id:"basic-auth",level:2},{value:"Flintlock server configuration",id:"flintlock-server-configuration",level:3},{value:"CAPMVM client configuration",id:"capmvm-client-configuration",level:3},{value:"mTLS",id:"mtls",level:2},{value:"Flintlock server configuration",id:"flintlock-server-configuration-1",level:3},{value:"CAPMVM client configuration",id:"capmvm-client-configuration-1",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"service-authentication"},"Service Authentication"),(0,a.kt)("p",null,"Secure Liquid Metal platform communications with mTLS and Basic Auth."),(0,a.kt)("h2",{id:"basic-auth"},"Basic Auth"),(0,a.kt)("h3",{id:"flintlock-server-configuration"},"Flintlock server configuration"),(0,a.kt)("p",null,"To configure ",(0,a.kt)("inlineCode",{parentName:"p"},"flintlockd")," with basic auth, provision the device with the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOF >flint-cfg.yaml\ninsecure: false\nbasic-auth-token: TOKEN\nEOF\n\n./provision.sh all \\ # or ./provision.sh flintlock\n  -f flint-cfg.yaml\n  # other flags\n")),(0,a.kt)("p",null,"If you inspect the service logs (",(0,a.kt)("inlineCode",{parentName:"p"},"systemctl status flintlockd"),"), you should see the following line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'level=info msg="basic authentication is enabled"\n')),(0,a.kt)("h3",{id:"capmvm-client-configuration"},"CAPMVM client configuration"),(0,a.kt)("p",null,"Before you create your CAPMVM cluster, create a secret containing a mapping for each\nhost and encoded token:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOF >secret.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mybasicsecret\n  namespace: default\ntype: Opaque\ndata:\n  192.168.0.31: Zm9v # foo\n  192.168.0.32: YmFy # bar\nEOF\n")),(0,a.kt)("p",null,"When you have generated your CAPMVM cluster manifest, edit the file to contain the\nfollowing reference to the secret:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"...\nkind: MicrovmCluster\nspec:\n  placement:\n    staticPool:\n      basicAuthSecret: mybasicsecret\n...\n")),(0,a.kt)("p",null,"Apply both to your management cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f secret.yaml\nkubectl apply -f cluster.yaml\n")),(0,a.kt)("h2",{id:"mtls"},"mTLS"),(0,a.kt)("h3",{id:"flintlock-server-configuration-1"},"Flintlock server configuration"),(0,a.kt)("p",null,"To configure ",(0,a.kt)("inlineCode",{parentName:"p"},"flintlockd")," with mTLS, provision the device with the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOF >flint-cfg.yaml\ninsecure: false\ntls-cert: <path to host pem>\ntls-key: <path to host key>\ntls-client-ca: <path to ca pem>\ntls-client-validate: true\nEOF\n\n./provision.sh all \\ # or ./provision.sh flintlock\n  -f flint-cfg.yaml\n  # other flags\n")),(0,a.kt)("p",null,"If you inspect the service logs (",(0,a.kt)("inlineCode",{parentName:"p"},"systemctl status flintlockd"),"), you should see the following line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'level=info msg="TLS is enabled"\n')),(0,a.kt)("h3",{id:"capmvm-client-configuration-1"},"CAPMVM client configuration"),(0,a.kt)("p",null,"Before you create your CAPMVM cluster, create an Opaque secret the client and CA keys:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret generic mytlssecret \\\n  --from-file=tls.crt=<path to client pem> \\\n  --from-file=tls.key=<path to client key> \\\n  --from-file=ca.crt=<path to ca pem>\n")),(0,a.kt)("p",null,"When you have generated your CAPMVM cluster manifest, edit the file to contain the\nfollowing reference to the secret:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"...\nkind: MicrovmCluster\nspec:\n  tlsSecretRef: mytlssecret\n...\n")))}p.isMDXComponent=!0}}]);